import tensorflow as tf
from model.EfficientLSTMV2 import EfficientLSTMV2
from model.EffModel import EffModel


DEVICE = "GPU"
import os
os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"
os.environ["CUDA_VISIBLE_DEVICES"] = "-1"
if DEVICE == "GPU":
    print("Num GPUs Available:", len(tf.config.experimental.list_physical_devices('GPU')))

if __name__ == '__main__':
    # lstm = EfficientLSTM()
    # lstm.train()
    # eff = EffModel()
    # eff.getEffTFModel(n=0)
    lstm = EfficientLSTMV2()
    # lstm.predict(5, type='EffLSTMModel', saveDir='B5', predictPath='ep_003-loss0.240-val_loss0.299.h5')
    # lstm.predict(5, type='EffLSTMModel', saveDir='B5', predictPath='ep_004-loss0.151-val_loss0.186.h5')
    # lstm.predict(5, type='EffLSTMModel', saveDir='B5', predictPath='ep_005-loss0.102-val_loss0.154.h5')
    # lstm.predict(5, type='EffLSTMModel', saveDir='B5', predictPath='ep_010-loss0.037-val_loss0.312.h5')
    # lstm.predict(6, type='EffLSTMModel', saveDir='B6', predictPath='ep_004-loss0.077-val_loss0.075.h5')
    # lstm.predict(6, type='EffLSTMModel', saveDir='B6', predictPath='ep_007-loss0.025-val_loss0.243.h5')
    # lstm.predict(6, type='EffLSTMModel', saveDir='B6', predictPath='ep_010-loss0.023-val_loss0.197.h5')
    # lstm.predict(7, type='EffLSTMModel', saveDir='B7', predictPath='ep_008-loss0.050-val_loss0.211.h5')
    # lstm.predict(20, type='EffBiLSTMModel', saveDir='BB0', predictPath='ep010-loss0.041-val_loss0.269.h5')
    # lstm.predict(21, type='EffBiLSTMModel', saveDir='BB1', predictPath='ep010-loss0.033-val_loss0.133.h5')
    # lstm.predict(22, type='EffBiLSTMModel', saveDir='BB2', predictPath='ep010-loss0.047-val_loss0.080.h5')
    # lstm.predict(23, type='EffBiLSTMModel', saveDir='BB3', predictPath='ep010-loss0.033-val_loss0.342.h5')
    # lstm.predict(24, type='EffBiLSTMModel', saveDir='BB3', predictPath='ep010-loss0.038-val_loss0.236.h5')
    # lstm.predict(25, type='EffBiLSTMModel', saveDir='BB5', predictPath='ep_005-loss0.080-val_loss0.215.h5')
    # lstm.predict(25, type='EffBiLSTMModel', saveDir='BB5', predictPath='ep_010-loss0.026-val_loss0.332.h5')
    # lstm.predict(26, type='EffBiLSTMModel', saveDir='BB6', predictPath='ep_005-loss0.097-val_loss0.224.h5')
    # lstm.predict(26, type='EffBiLSTMModel', saveDir='BB6', predictPath='ep_010-loss0.037-val_loss0.251.h5')
    # lstm.predict(27, type='EffBiLSTMModel', saveDir='BB7', predictPath='ep_005-loss0.112-val_loss0.227.h5')
    # lstm.predict(27, type='EffBiLSTMModel', saveDir='BB7', predictPath='ep_009-loss0.057-val_loss0.242.h5')
    # lstm.predict(27, type='EffBiLSTMModel', saveDir='BB7', predictPath='ep_010-loss0.021-val_loss0.324.h5')
    # lstm.predict(14, type='EffTransformerModel')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep011-loss0.077-val_loss0.044.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep012-loss0.061-val_loss0.011.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep013-loss0.044-val_loss0.062.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep014-loss0.038-val_loss0.059.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep015-loss0.035-val_loss0.016.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep016-loss0.032-val_loss0.049.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep017-loss0.026-val_loss0.075.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep018-loss0.028-val_loss0.043.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep019-loss0.016-val_loss0.048.h5')
    # lstm.predict(44, type='EffTransformerBLSTMModel', predictPath='ep020-loss0.017-val_loss0.041.h5')
    # lstm.predict(34, type='EffTransformerLSTMModel')
    # lstm.predict(4, type='EffLSTMModel')
    # lstm.predict(50, type='EffRnnModel', saveDir='ERB0', predictPath='ep_010-loss0.034-val_loss0.162.h5')
    # lstm.predict(51, type='EffRnnModel', saveDir='ERB1', predictPath='ep_004-loss0.166-val_loss0.177.h5')
    # lstm.predict(51, type='EffRnnModel', saveDir='ERB1', predictPath='ep_006-loss0.083-val_loss0.112.h5')
    # lstm.predict(51, type='EffRnnModel', saveDir='ERB1', predictPath='ep_009-loss0.038-val_loss0.156.h5')
    # lstm.predict(52, type='EffRnnModel', saveDir='ERB2', predictPath='ep_005-loss0.127-val_loss0.188.h5')
    # lstm.predict(52, type='EffRnnModel', saveDir='ERB2', predictPath='ep_010-loss0.054-val_loss0.256.h5')
    # lstm.predict(53, type='EffRnnModel', saveDir='ERB3', predictPath='ep_006-loss0.102-val_loss0.131.h5')
    # lstm.predict(53, type='EffRnnModel', saveDir='ERB3', predictPath='ep_010-loss0.060-val_loss0.134.h5')
    # lstm.predict(54, type='EffRnnModel', saveDir='ERB4', predictPath='ep_005-loss0.134-val_loss0.147.h5')
    # lstm.predict(54, type='EffRnnModel', saveDir='ERB4', predictPath='ep_010-loss0.072-val_loss0.279.h5')
    # lstm.predict(55, type='EffRnnModel', saveDir='ERB5', predictPath='ep_007-loss0.103-val_loss0.152.h5')
    # lstm.predict(55, type='EffRnnModel', saveDir='ERB5', predictPath='ep_010-loss0.059-val_loss0.198.h5')
    # lstm.predict(56, type='EffRnnModel', saveDir='ERB6', predictPath='ep_004-loss0.235-val_loss0.223.h5')
    # lstm.predict(56, type='EffRnnModel', saveDir='ERB6', predictPath='ep_007-loss0.119-val_loss0.232.h5')
    # lstm.predict(56, type='EffRnnModel', saveDir='ERB6', predictPath='ep_010-loss0.076-val_loss0.270.h5')
    # lstm.predict(57, type='EffRnnModel', saveDir='ERB7', predictPath='ep_006-loss0.154-val_loss0.149.h5')
    # lstm.predict(57, type='EffRnnModel', saveDir='ERB7', predictPath='ep_009-loss0.078-val_loss0.201.h5')
    # lstm.predict(60, type='EffGruModel', saveDir='EGB0', predictPath='ep_005-loss0.066-val_loss0.205.h5')
    # lstm.predict(60, type='EffGruModel', saveDir='EGB0', predictPath='ep_009-loss0.036-val_loss0.169.h5')
    # lstm.predict(60, type='EffGruModel', saveDir='EGB0', predictPath='ep_010-loss0.019-val_loss0.250.h5')
    # lstm.predict(61, type='EffGruModel', saveDir='EGB1', predictPath='ep_006-loss0.064-val_loss0.178.h5')
    lstm.predict(61, type='EffGruModel', saveDir='EGB1', predictPath='ep_010-loss0.027-val_loss0.198.h5')

